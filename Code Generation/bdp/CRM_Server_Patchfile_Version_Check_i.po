THEORY ProofList IS
_f(1) & _f(2) & _f(15) & _f(16) & Operation_configuration_management.1,(_f(27) & _f(28) & _f(29) & _f(3) => _f(30));
_f(1) & _f(2) & _f(15) & _f(16) & Operation_version_check.4,(_f(19) & _f(20) & _f(21) & _f(23) & _f(3) => _f(26));
_f(1) & _f(2) & _f(15) & _f(16) & Operation_version_check.3,(_f(19) & _f(20) & _f(21) & _f(23) & _f(3) => _f(24));
_f(1) & _f(2) & _f(15) & _f(16) & Operation_version_check.2,(_f(19) & _f(20) & _f(21) & _f(22) & _f(3) => _f(25));
_f(1) & _f(2) & _f(15) & _f(16) & Operation_version_check.1,(_f(19) & _f(20) & _f(21) & _f(22) & _f(3) => _f(24));
_f(1) & _f(2) & _f(15) & _f(16) & Operation_capacity_check.1,(_f(17) & _f(3) => _f(18));
_f(1) & _f(2) & Initialisation.11,(_f(3) => _f(14));
_f(1) & _f(2) & Initialisation.10,(_f(3) => _f(13));
_f(1) & _f(2) & Initialisation.9,(_f(3) => _f(12));
_f(1) & _f(2) & Initialisation.8,(_f(3) => _f(11));
_f(1) & _f(2) & Initialisation.7,(_f(3) => _f(10));
_f(1) & _f(2) & Initialisation.6,(_f(3) => _f(9));
_f(1) & _f(2) & Initialisation.5,(_f(3) => _f(8));
_f(1) & _f(2) & Initialisation.4,(_f(3) => _f(7));
_f(1) & _f(2) & Initialisation.3,(_f(3) => _f(6));
_f(1) & _f(2) & Initialisation.2,(_f(3) => _f(5));
_f(1) & _f(2) & Initialisation.1,(_f(3) => _f(4))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..2)*{Update_Response}): FIN(NATURAL*{Update_Response})& not(((1..2)*{Update_Response}) = {}) & ((1..2)*{Store_Result}): FIN(NATURAL*{Store_Result})& not(((1..2)*{Store_Result}) = {}) & ((1..2)*{File_Tag}): FIN(NATURAL*{File_Tag})& not(((1..2)*{File_Tag}) = {}) & ((1..3)*{Data_Format}): FIN(NATURAL*{Data_Format})& not(((1..3)*{Data_Format}) = {}) & ((1..4)*{File_Status}): FIN(NATURAL*{File_Status})& not(((1..4)*{File_Status}) = {}) & ((1..3)*{Storage_Response_Tag}): FIN(NATURAL*{Storage_Response_Tag})& not(((1..3)*{Storage_Response_Tag}) = {}) & ((1..6)*{Operation}): FIN(NATURAL*{Operation})& not(((1..6)*{Operation}) = {}) & ((1..3)*{Target}): FIN(NATURAL*{Target})& not(((1..3)*{Target}) = {}) & ((1..2)*{Subject}): FIN(NATURAL*{Subject})& not(((1..2)*{Subject}) = {});
"Refinement is correct";
((100) : (INT));
((85) : (INT));
((0) : (INT));
(((1|->Data_Format)) : ({}));
(((2|->Store_Result)) : ({}));
(((1|->Storage_Response_Tag)) : ({}));
(((1|->File_Status)) : ({}));
(((1|->Operation)) : ({}));
(((1|->Target)) : ({}));
(((2|->Update_Response)) : ({}));
(((1|->Subject)) : ({}));
((Storage_Capacity) : (INT)) & ((Storage_Capacity_Criteria) : (INT)) & ((Version) : (INT)) & ((File_Type) : (((1..3)*{Data_Format}))) & ((Save_Result) : (((1..2)*{Store_Result}))) & ((Tag) : (((1..3)*{Storage_Response_Tag}))) & ((Stored_Capacity) : (INT)) & ((Data_Status) : (((1..4)*{File_Status}))) & ((Data_Operation) : (((1..6)*{Operation}))) & ((Send_Target) : (((1..3)*{Target}))) & ((Update_Request_Result) : (((1..2)*{Update_Response}))) & ((Subject_Entity) : (((1..2)*{Subject})));
((Storage_Capacity) = (Storage_Capacity$1)) & ((Storage_Capacity_Criteria) = (Storage_Capacity_Criteria$1)) & ((Version) = (Version$1)) & ((File_Type) = (File_Type$1)) & ((Save_Result) = (Save_Result$1)) & ((Tag) = (Tag$1)) & ((Stored_Capacity) = (Stored_Capacity$1)) & ((Data_Status) = (Data_Status$1)) & ((Data_Operation) = (Data_Operation$1)) & ((Send_Target) = (Send_Target$1)) & ((Update_Request_Result) = (Update_Request_Result$1)) & ((Subject_Entity) = (Subject_Entity$1));
((File_Size) : (NAT));
(((2|->Store_Result)) = (Save_Result$1));
((Vehicle_Patchfile_Version) : (NAT));
((Patchfile_Version) : (NAT));
(Patchfile_Version +1 <= Vehicle_Patchfile_Version);
(Vehicle_Patchfile_Version +1 <= Patchfile_Version);
not((Vehicle_Patchfile_Version +1 <= Patchfile_Version));
(((1|->Target)) = (Send_Target$1));
((Update_Request_Result$1) = ((1|->Update_Response)));
((Update_Request_Result$1) = ((2|->Update_Response)));
((Current_Item_Version) : (NAT));
((Latest_Item_Version) : (NAT));
(Current_Item_Version +1 <= Latest_Item_Version);
(((6|->Operation)) = (Data_Operation$1))
END
&
THEORY EnumerateX IS
Data_Format == {Empty_Data,Encrypted_Binary,Binary};
File_Status == {Empty_File,Encrypted_Patchfile,Patchfile,Sourcecode};
File_Tag == {Latest_File,Current_File};
Operation == {None,Send,Install,Backup,Recovery,Transfer};
Storage_Response_Tag == {Normal_State,Alarm,Overwrite};
Store_Result == {Save,Not_Save};
Subject == {Noone,OEM_TeamLeader};
Target == {Empty_Target,ECU,Secondary_ECU};
Update_Response == {Update_Required,Update_Unrequired}
END
