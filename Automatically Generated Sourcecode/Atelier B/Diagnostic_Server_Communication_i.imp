/* Diagnostic_Server_Communication_i
 * Author: SANE
 * Creation date: 2023-04-25
 */

IMPLEMENTATION Diagnostic_Server_Communication_i
REFINES Crypto

INITIALISATION
    Subject := Empty_Agent;
    Encryption_Algorithm := Empty_Encrypt_Method;
    Encryption_Mode := Empty_Mode;
    Signature_Algorithm := Empty_Sign_Method;
    Hash_Algorithm := Empty_Hash_Method;
    Receive_Encrypt_Message := Empty_Message;
    Receive_Sign_Message := Empty_Message;
    Send_Encrypt_Message := Empty_Message;
    Send_Sign_Message := Empty_Message;
    Permission := None;
    Encryption_Key_length := 0;
    Signature_Key_length := 0;
    Hash_Key_length := 0;
    Test_Result := Crypto_Test_Fail;
    Send_Target := Empty_Agent;
    Data_Status := Empty_Message;
    User_Data_Processing := All

OPERATIONS
    receive_message = 
    BEGIN
        IF Subject = Development_Server or
           Subject = Diagnostic_Server &
           Encryption_Algorithm = AES & 
           Encryption_Key_length = 512 or
           Encryption_Key_length = 1024 or
           Encryption_Key_length = 2048 &
           Encryption_Mode = ECB or
           Encryption_Mode = OFB or
           Encryption_Mode = CFB or
           Encryption_Mode = CTR or
           Encryption_Mode = CBC or
           Encryption_Mode = GCM or 
           Encryption_Mode = CCM &
           Receive_Encrypt_Message = Encrypted_Written_Sourcecode &
           Receive_Sign_Message = Signed_Written_Sourcecode
           
        THEN
           Subject := Diagnostic_Server;
           Permission := Download
        ELSE
           Permission := None
        END
    END;
    
    signature_verify(Timestamp, Current_Timestamp, Timestamp_Subtraction) = 
    BEGIN
        IF Signature_Algorithm = RSA or 
           Signature_Algorithm = Curve25519_Ed25519 or
           Signature_Algorithm = NIST_Curve_P256_P384_P521 &
           Signature_Key_length = 2048 or
           Signature_Key_length = 3072 or
           Signature_Key_length = 4096 &
           Hash_Algorithm = SHA_1 or 
           Hash_Algorithm = SHA_2 or 
           Hash_Algorithm = SHA_3 &
           Hash_Key_length = 256 or
           Hash_Key_length = 384 or
           Hash_Key_length = 512 &
           Data_Status = Decrypted_Sourcecode &
           Data_Status = Decrypted_Signed_Sourcecode &
           Decrypted_Sourcecode = Decrypted_Signed_Sourcecode &
           Current_Timestamp > Timestamp &
           Timestamp_Subtraction < 100
           
        THEN
           Test_Result := Signature_Verify_Pass
        ELSE
           Test_Result := Signature_Verify_Fail
        END
    END;
    
    patchfile_decryption = skip;
    
    patchfile_encryption = skip;
    
    signature = 
    BEGIN
        IF Signature_Algorithm = RSA or 
           Signature_Algorithm = Curve25519_Ed25519 or
           Signature_Algorithm = NIST_Curve_P256_P384_P521 &
           Signature_Key_length = 2048 or
           Signature_Key_length = 3072 or
           Signature_Key_length = 4096 &
           Hash_Algorithm = SHA_1 or 
           Hash_Algorithm = SHA_2 or 
           Hash_Algorithm = SHA_3 &
           Hash_Key_length = 256 or
           Hash_Key_length = 384 or
           Hash_Key_length = 512 &
           Data_Status = Encrypted_Binary &
           Data_Status = Signed_Binary &
           Subject = OEM_TeamLeader &
           Permission = Approve
           
        THEN
           Subject := OEM_TeamLeader;
           Permission := Transfer
        ELSE
           Permission := None
        END
    END;
    
    send_message = 
    BEGIN
        IF Subject = Diagnostic_Server or
           Subject = Development_Server &
           Encryption_Algorithm = AES & 
           Encryption_Key_length = 512 or
           Encryption_Key_length = 1024 or
           Encryption_Key_length = 2048 &
           Encryption_Mode = ECB or
           Encryption_Mode = OFB or
           Encryption_Mode = CFB or
           Encryption_Mode = CTR or
           Encryption_Mode = CBC or
           Encryption_Mode = GCM or 
           Encryption_Mode = CCM &
           Send_Encrypt_Message = Encrypted_Sourcecode &
           Send_Sign_Message = Signed_Sourcecode
           
        THEN
           Send_Target := Developer_PC
           
            ELSE IF
               Subject = Diagnostic_Server or
               Subject = Update_Server &
               Encryption_Algorithm = AES & 
               Encryption_Key_length = 512 or
               Encryption_Key_length = 1024 or
               Encryption_Key_length = 2048 &
               Encryption_Mode = ECB or
               Encryption_Mode = OFB or
               Encryption_Mode = CFB or
               Encryption_Mode = CTR or
               Encryption_Mode = CBC or
               Encryption_Mode = GCM or 
               Encryption_Mode = CCM &
               Send_Encrypt_Message = Encrypted_Binary &
               Send_Sign_Message = Signed_Binary
               
            THEN
               Send_Target := Update_Server
            ELSE
               Send_Target := Empty_Agent
            END
        END
    END
END